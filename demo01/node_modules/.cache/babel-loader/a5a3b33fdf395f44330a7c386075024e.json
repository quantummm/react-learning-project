{"ast":null,"code":"const defaultState = {\n  inputValue: 'add something',\n  list: ['standup meeting', 'review the project', 'finish the project']\n};\nexport default ((state = defaultState, action) => {\n  //console.log(state, action)\n  //reducer only accept state, can't modify the state\n  if (action.type === 'changeInput') {\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.inputValue = action.value;\n    newState.inputValue = '';\n    return newState;\n  }\n\n  if (action.type === 'addItem') {\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.list.push(newState.inputValue);\n    newState.inputValue = '';\n    return newState;\n  }\n\n  return state;\n});","map":{"version":3,"sources":["/Users/aiden/vscodeprojects/redux-learning/src/store/reducer.js"],"names":["defaultState","inputValue","list","state","action","type","newState","JSON","parse","stringify","value","push"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE,eADK;AAEjBC,EAAAA,IAAI,EAAE,CACF,iBADE,EAEF,oBAFE,EAGF,oBAHE;AAFW,CAArB;AAWA,gBAAe,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAE7C;AACA;AACA,MAAIA,MAAM,CAACC,IAAP,KAAgB,aAApB,EAAkC;AAC9B,QAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeN,KAAf,CAAX,CAAf;AACAG,IAAAA,QAAQ,CAACL,UAAT,GAAsBG,MAAM,CAACM,KAA7B;AACAJ,IAAAA,QAAQ,CAACL,UAAT,GAAsB,EAAtB;AACA,WAAOK,QAAP;AACH;;AAED,MAAIF,MAAM,CAACC,IAAP,KAAgB,SAApB,EAA8B;AAC1B,QAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeN,KAAf,CAAX,CAAf;AACAG,IAAAA,QAAQ,CAACJ,IAAT,CAAcS,IAAd,CAAmBL,QAAQ,CAACL,UAA5B;AACAK,IAAAA,QAAQ,CAACL,UAAT,GAAsB,EAAtB;AACA,WAAOK,QAAP;AACH;;AACD,SAAOH,KAAP;AACH,CAlBD","sourcesContent":["const defaultState = {\n    inputValue: 'add something',\n    list: [\n        'standup meeting',\n        'review the project',\n        'finish the project'\n    ]\n}\n\n\n\nexport default (state = defaultState, action) => {\n\n    //console.log(state, action)\n    //reducer only accept state, can't modify the state\n    if (action.type === 'changeInput'){\n        let newState = JSON.parse(JSON.stringify(state))\n        newState.inputValue = action.value\n        newState.inputValue = ''\n        return newState\n    }\n\n    if (action.type === 'addItem'){\n        let newState = JSON.parse(JSON.stringify(state))\n        newState.list.push(newState.inputValue)\n        newState.inputValue = ''\n        return newState\n    }\n    return state\n}"]},"metadata":{},"sourceType":"module"}