{"ast":null,"code":"var _jsxFileName = \"/Users/aiden/vscodeprojects/redux-learning/src/TodoList.js\";\nimport React, { Component } from 'react';\nimport store from './store';\nimport { changeInputAction, addItemAction, deleteItemAction } from './store/actionCreators';\nimport TodoListUI from './TodoListUI';\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props); //console.log(store.getState())\n\n    this.state = store.getState();\n    this.changeInputValue = this.changeInputValue.bind(this);\n    this.clickBtn = this.clickBtn.bind(this);\n    this.storeChange = this.storeChange.bind(this);\n    store.subscribe(this.storeChange);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(TodoListUI, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    });\n  }\n\n  changeInputValue(e) {\n    const action = //{\n    //type: CHANGE_INPUT,\n    //value: e.target.value\n    changeInputAction(e.target.value); //}\n\n    store.dispatch(action);\n  }\n\n  storeChange() {\n    this.setState(store.getState);\n  }\n\n  clickBtn() {\n    //console.log('clickbtn')\n    //const action = {type: ADD_ITEM}\n    const action = addItemAction();\n    store.dispatch(action);\n  }\n\n  deleteItem(index) {\n    console.log(index); //const action = {\n    //    type: DELETE_ITEM,\n    //    index\n    //}\n\n    const action = deleteItemAction(index);\n    store.dispatch(action);\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/aiden/vscodeprojects/redux-learning/src/TodoList.js"],"names":["React","Component","store","changeInputAction","addItemAction","deleteItemAction","TodoListUI","TodoList","constructor","props","state","getState","changeInputValue","bind","clickBtn","storeChange","subscribe","render","e","action","target","value","dispatch","setState","deleteItem","index","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,iBAAT,EAA4BC,aAA5B,EAA2CC,gBAA3C,QAAmE,wBAAnE;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAC7BO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAEf;;AACA,SAAKC,KAAL,GAAaR,KAAK,CAACS,QAAN,EAAb;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKE,WAAL,GAAmB,KAAKA,WAAL,CAAiBF,IAAjB,CAAsB,IAAtB,CAAnB;AACAX,IAAAA,KAAK,CAACc,SAAN,CAAgB,KAAKD,WAArB;AAEH;;AACDE,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AAEDL,EAAAA,gBAAgB,CAACM,CAAD,EAAG;AACf,UAAMC,MAAM,GAAG;AACX;AACA;AACAhB,IAAAA,iBAAiB,CAACe,CAAC,CAACE,MAAF,CAASC,KAAV,CAHrB,CADe,CAKf;;AAEAnB,IAAAA,KAAK,CAACoB,QAAN,CAAeH,MAAf;AACH;;AAEDJ,EAAAA,WAAW,GAAE;AACT,SAAKQ,QAAL,CAAcrB,KAAK,CAACS,QAApB;AACH;;AAEDG,EAAAA,QAAQ,GAAE;AACN;AACA;AACA,UAAMK,MAAM,GAAGf,aAAa,EAA5B;AACAF,IAAAA,KAAK,CAACoB,QAAN,CAAeH,MAAf;AACH;;AACDK,EAAAA,UAAU,CAACC,KAAD,EAAO;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EADa,CAEb;AACA;AACA;AACA;;AACA,UAAMN,MAAM,GAAGd,gBAAgB,CAACoB,KAAD,CAA/B;AAEAvB,IAAAA,KAAK,CAACoB,QAAN,CAAeH,MAAf;AACH;;AA9C4B;;AAiDjC,eAAeZ,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport store from './store'\nimport { changeInputAction, addItemAction, deleteItemAction } from './store/actionCreators'\nimport TodoListUI from './TodoListUI'\n\nclass TodoList extends Component {\n    constructor(props) {\n        super(props);\n        //console.log(store.getState())\n        this.state = store.getState()\n        this.changeInputValue = this.changeInputValue.bind(this)\n        this.clickBtn = this.clickBtn.bind(this)\n        this.storeChange = this.storeChange.bind(this)\n        store.subscribe(this.storeChange)\n\n    }\n    render() {\n        return (\n            <TodoListUI />\n        );\n    }\n\n    changeInputValue(e){\n        const action = //{\n            //type: CHANGE_INPUT,\n            //value: e.target.value\n            changeInputAction(e.target.value)\n        //}\n\n        store.dispatch(action)\n    }\n\n    storeChange(){\n        this.setState(store.getState)\n    }\n\n    clickBtn(){\n        //console.log('clickbtn')\n        //const action = {type: ADD_ITEM}\n        const action = addItemAction()\n        store.dispatch(action)\n    }\n    deleteItem(index){\n        console.log(index)\n        //const action = {\n        //    type: DELETE_ITEM,\n        //    index\n        //}\n        const action = deleteItemAction(index)\n\n        store.dispatch(action)\n    }\n}\n\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}